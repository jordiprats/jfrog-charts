{{- if .Values.buildPlane.k8s.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "pipelines.fullname" . }}-node-setup-{{ randAlpha 8 | lower }}
  labels:
    {{- include "pipelines.labels" . | nindent 4 }}
    component: {{ include "pipelines.chart" . }}-node
  annotations:
    "helm.sh/hook": post-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    #"helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pipelines.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: k8s-node
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ include "pipelines.fullname" . }}-node-setup
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      containers:
      - name: node-templates-setup
        image: "{{ .Values.imageRegistry }}/{{ .Values.pipelines.pipelinesInit.image.repository }}:{{ default .Chart.AppVersion .Values.pipelines.pipelinesInit.image.tag }}"
        imagePullPolicy: {{ .Values.pipelines.pipelinesInit.image.pullPolicy }}
        env:
        - name: PIPELINES_API_IP
          value: {{ include "pipelines.api.name" . }}
        - name: PIPELINES_API_PORT
          value: {{ .Values.pipelines.api.service.port | quote }}
        - name: TMP_DIR
          value: /tmp
        command:
        - '/bin/sh'
        - '-c'
        - >
          echo Prepare scripts;
          cp -f /init-scripts/wait-for-api.sh ./scripts;
          chmod +x ./scripts/wait-for-api.sh;
          cp -f /init-scripts/createK8sNodePool.sh ./scripts;
          chmod +x ./scripts/createK8sNodePool.sh;
          cp -f /init-scripts/createK8sNodesConfigs.sh ./scripts;
          chmod +x ./scripts/createK8sNodesConfigs.sh;
          ./scripts/wait-for-api.sh;
          mkdir {{ .Values.pipelines.mountPath }};
          cp -fv /tmp/etc/system.yaml {{ .Values.pipelines.mountPath }}/system.yaml;
          echo Initialize Node Pool;
          ./scripts/createK8sNodePool.sh;
          echo Initialize Nodes Configs;
          ./scripts/createK8sNodesConfigs.sh;
        volumeMounts:
        - name: node-setup-scripts
          mountPath: "/init-scripts"
        - name: nodes-setup
          mountPath: "/node-templates"
        - name: systemyaml
          mountPath: "/tmp/etc/system.yaml"
          subPath: system.yaml
      volumes:
      - name: node-setup-scripts
        configMap:
          name: {{ include "pipelines.fullname" . }}-node-setup-scripts
      - name: nodes-setup
        configMap:
          name: {{ include "pipelines.fullname" . }}-node-templates
      - name: systemyaml
        secret:
          secretName: {{ include "pipelines.fullname" . }}-system-yaml
{{- end }}
